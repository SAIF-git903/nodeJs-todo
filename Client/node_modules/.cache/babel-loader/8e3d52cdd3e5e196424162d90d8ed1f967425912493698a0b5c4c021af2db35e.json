{"ast":null,"code":"var _jsxFileName = \"/home/workspace123/nodejs-todo/Client/src/component/TodoCard/TodoBox.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport TaskCard from \"../TaskCard\";\nimport { getUserForAssigning } from \"../../api/axiosConfig\";\nimport { Dropdown } from \"antd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction TodoBox(props) {\n  _s();\n  const [isPlusClicked, setPlusClicked] = React.useState(false);\n  const [inputVal, SetInput] = React.useState(\"\");\n  const [apiUser, setApiUser] = React.useState([]);\n  const {\n    title\n  } = props;\n  function handlePostRequest() {\n    console.log(inputVal);\n    console.log(apiUser);\n  }\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getUserForAssigning();\n        setApiUser(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const items = apiUser.map(user => ({\n    label: user.name,\n    // Assuming `name` is the property of the user object that should be displayed\n    key: user.id // Assuming `id` is the unique identifier for each user\n  }));\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"centered-anything new-box\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-main-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-card-box flex-row show-heading-hover-effect\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"todo-card-heading\",\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"img-plus-div\",\n          onClick: () => setPlusClicked(!isPlusClicked),\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: require(\"../../assets/icons/Plus.svg\").default,\n            style: {\n              width: \"20px\"\n            },\n            alt: \"mySvgImage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), isPlusClicked && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"new-task-assign-div\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Assign new todo...\",\n            onChange: e => SetInput(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"close-icon\",\n            onClick: () => setPlusClicked(false),\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: require(\"../../assets/icons/Close.svg\").default,\n              style: {\n                width: \"20px\"\n              },\n              alt: \"mySvgImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"user-icon\",\n            children: /*#__PURE__*/_jsxDEV(Dropdown, {\n              menu: {\n                items\n              },\n              trigger: [\"click\"],\n              overlayStyle: {\n                width: \"200px\"\n              },\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: require(\"../../assets/icons/User.svg\").default,\n                style: {\n                  width: \"20px\"\n                },\n                alt: \"mySvgImage\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"save-btn\",\n            children: /*#__PURE__*/_jsxDEV(\"span\", {\n              onClick: handlePostRequest,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)\n      }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"todo-taskimage src-div\",\n        children: /*#__PURE__*/_jsxDEV(TaskCard, {\n          setPlusClicked: setPlusClicked,\n          isPlusClicked: isPlusClicked\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(TodoBox, \"P68fHzlSaK/GaRC6I2pxj30iYAw=\");\n_c = TodoBox;\nexport default TodoBox;\nvar _c;\n$RefreshReg$(_c, \"TodoBox\");","map":{"version":3,"names":["React","TaskCard","getUserForAssigning","Dropdown","jsxDEV","_jsxDEV","Fragment","_Fragment","TodoBox","props","_s","isPlusClicked","setPlusClicked","useState","inputVal","SetInput","apiUser","setApiUser","title","handlePostRequest","console","log","useEffect","fetchData","response","error","items","map","user","label","name","key","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","src","require","default","style","width","alt","type","placeholder","onChange","e","target","value","menu","trigger","overlayStyle","_c","$RefreshReg$"],"sources":["/home/workspace123/nodejs-todo/Client/src/component/TodoCard/TodoBox.tsx"],"sourcesContent":["import React from \"react\";\nimport TaskCard from \"../TaskCard\";\nimport { getUserForAssigning } from \"../../api/axiosConfig\";\nimport { Dropdown, MenuProps } from \"antd\";\n\ninterface TodoBoxProps {\n  title: string;\n}\n\nfunction TodoBox(props: TodoBoxProps) {\n  const [isPlusClicked, setPlusClicked] = React.useState<boolean>(false);\n  const [inputVal, SetInput] = React.useState<string>(\"\");\n  const [apiUser, setApiUser] = React.useState<any[]>([]);\n\n  const { title } = props;\n\n  function handlePostRequest() {\n    console.log(inputVal);\n    console.log(apiUser);\n  }\n\n  React.useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await getUserForAssigning();\n        setApiUser(response);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const items: MenuProps[\"items\"] = apiUser.map((user) => ({\n    label: user.name, // Assuming `name` is the property of the user object that should be displayed\n    key: user.id, // Assuming `id` is the unique identifier for each user\n  }));\n\n  return (\n    <div className=\"centered-anything new-box\">\n      <div className=\"todo-main-container\">\n        <div className=\"todo-card-box flex-row show-heading-hover-effect\">\n          <p className=\"todo-card-heading\">{title}</p>\n          <p>0</p>\n\n          <div\n            className=\"img-plus-div\"\n            onClick={() => setPlusClicked(!isPlusClicked)}\n          >\n            <img\n              src={require(\"../../assets/icons/Plus.svg\").default}\n              style={{ width: \"20px\" }}\n              alt=\"mySvgImage\"\n            />\n          </div>\n        </div>\n        {isPlusClicked && (\n          <>\n            <div className=\"new-task-assign-div\">\n              <input\n                type=\"text\"\n                placeholder=\"Assign new todo...\"\n                onChange={(e) => SetInput(e.target.value)}\n              />\n              <div className=\"close-icon\" onClick={() => setPlusClicked(false)}>\n                <img\n                  src={require(\"../../assets/icons/Close.svg\").default}\n                  style={{ width: \"20px\" }}\n                  alt=\"mySvgImage\"\n                />\n              </div>\n              <div className=\"user-icon\">\n                <Dropdown menu={{ items }} trigger={[\"click\"]} overlayStyle={{width:\"200px\"}}>\n                  <img\n                    src={require(\"../../assets/icons/User.svg\").default}\n                    style={{ width: \"20px\" }}\n                    alt=\"mySvgImage\"\n                  />\n                </Dropdown>\n              </div>\n\n              <div className=\"save-btn\">\n                <span onClick={handlePostRequest}>Save</span>\n              </div>\n            </div>\n          </>\n        )}\n        <div className=\"todo-taskimage src-div\">\n          <TaskCard\n            setPlusClicked={setPlusClicked}\n            isPlusClicked={isPlusClicked}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TodoBox;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}